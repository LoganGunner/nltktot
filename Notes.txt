notes:

make language/program data agnostic/flexible

do not want to adjust python on the fly

should call from database for keywords, etc.

focus on tracking one level of task, then adding in layers afterwards

database ideas:

Name - Start - End (required for GANTT chart)

displaying concurrent messages with the conversation?

Ex: |---------------Conversation name------------|
     •chat 1  •chat 2

is this doable with grafana GANTT plugin?
IS doable with Data Links Link data as time range based on currently selected 
portion of GANTT graph, showing nearby timed messages in a separate field

TACREP:

    Name (Letter + number)// Serial (E-000xx) // Track Type (confidence) // Assumed Target ID (ship model, etc.) //

    Track # (TNxxx) // Sender? // EL notation // Radio function type (2 uppercase letters) // Frequency (MHZ) //

    Bearing/Range // Area of track (Elipse notated as "X" x "Y" / "Coordinate center point") //

    Time of track (Zulu time) // Status (eg. ACTIVE IN AREA) // Classification //

Track # used for name of GANTT process
Time of Track used as initial timestamp to represent the beginning of the process lifespan.
Last mention of track used as the end of the process lifespan.

GANTT Data Sources: 
   Name  |     Start     |     End
  Track# | Time of Track | Last Mention

Subprocesses:
     Name    |       Start      |        End        |
  Find/Fix   | Time of Track    | TACREP Posted
  Track TN#  | TACREP Posted    | Track Correlated
  Target TN# | Track Correlated | Link-16 Message
  Engage TN# | Sent Link-16     | Return Link-16?
  Assess TN# | Return Link-16?  | ???


  New Approach:
    Iterate through DERG file, strip unique JTNS, record their initial positions
    Iterate through IRC logs, correlate JTNS to TN or E lint serials via position and time
    Record timestamps related to the JTN and other serial statements.
    Save to database in GANTT format